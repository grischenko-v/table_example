{"version":3,"sources":["data.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["name","type","key","column_0","column_1","column_2","column_3","column_4","column_5","column_6","children","cellRenderer","selectedRows","selectedLeafs","value","row","isRowSelected","indexOf","toString","isLeafSelected","find","item","data-id","data-row","className","clsx","onCell","setSelectedLeafs","setSelectedRows","setClickedData","record","onClick","e","position","target","dataset","id","onDoubleClick","rowIndex","rowIsSelected","leafIsSelected","index","leafs","copy","splice","rows","filter","App","useState","clickedData","columns","title","dataIndex","width","render","Array","fill","map","_","data","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6cf2f132.chunk.js","sourcesContent":["export default [\n    {\n        name: 'Node 0',\n        type: 'Node',\n        key: 1,\n        column_0: [0, 0],\n        column_1: [0, 1],\n        column_2: [0, 2],\n        column_3: [0, 3],\n        column_4: [0, 4],\n        column_5: [0, 5],\n        column_6: [0, 6],\n        children: [\n            {\n                name: 'Node 1',\n                type: 'Node',\n                column_0: [1, 0],\n                column_1: [1, 1],\n                column_2: [1, 2],\n                column_3: [1, 3],\n                column_4: [1, 4],\n                column_5: [1, 5],\n                column_6: [1, 6],\n                key: 2,\n                children: [\n                    {\n                        name: 'Leaf 1',\n                        type: 'Leaf',\n                        column_0: [2, 0],\n                        column_1: [2, 1],\n                        column_2: [2, 2],\n                        column_3: [2, 3],\n                        column_4: [2, 4],\n                        column_5: [2, 5],\n                        column_6: [2, 6],\n                        key: 9,\n                    },\n                    {\n                        name: 'Leaf 2',\n                        type: 'Leaf',\n                        column_0: [3, 0],\n                        column_1: [3, 1],\n                        column_2: [3, 2],\n                        column_3: [3, 3],\n                        column_4: [3, 4],\n                        column_5: [3, 5],\n                        column_6: [3, 6],\n                        key: 3,\n                    },\n                    {\n                        name: 'Leaf 3',\n                        type: 'Leaf',\n                        column_0: [4, 0],\n                        column_1: [4, 1],\n                        column_2: [4, 2],\n                        column_3: [4, 3],\n                        column_4: [4, 4],\n                        column_5: [4, 5],\n                        column_6: [4, 6],\n                        key: 4,\n                    }\n                ]\n            },\n            {\n                name: 'Node 2',\n                type: 'Node',\n                column_0: [5, 0],\n                column_1: [5, 1],\n                column_2: [5, 2],\n                column_3: [5, 3],\n                column_4: [5, 4],\n                column_5: [5, 5],\n                column_6: [5, 6],\n                key: 5,\n                children: [\n                    {\n                        name: 'Leaf 4',\n                        type: 'Leaf',\n                        column_0: [6, 0],\n                        column_1: [6, 1],\n                        column_2: [6, 2],\n                        column_3: [6, 3],\n                        column_4: [6, 4],\n                        column_5: [6, 5],\n                        column_6: [6, 6],\n                        key: 6,\n                    }\n                ]\n            },\n        ]\n    },\n    {\n        name: 'Node 3',\n        type: 'Node',\n        key: 7,\n        column_0: [7, 0],\n        column_1: [7, 1],\n        column_2: [7, 2],\n        column_3: [7, 3],\n        column_4: [7, 4],\n        column_5: [7, 5],\n        column_6: [7, 6],\n        children: [\n            {\n                name: 'Leaf 5',\n                type: 'Leaf',\n                column_0: [8, 0],\n                column_1: [8, 1],\n                column_2: [8, 2],\n                column_3: [8, 3],\n                column_4: [8, 4],\n                column_5: [8, 5],\n                column_6: [8, 6],\n                key: 8,\n            }\n        ]\n    }\n]","import React, { SetStateAction, useState } from 'react';\nimport Table from 'rc-table';\nimport clsx from 'clsx';\nimport data from './data';\nimport './App.css';\n\ninterface Irow {\n    type: string,\n}\n\nconst cellRenderer = (selectedRows: String[], selectedLeafs: String[]) => (value: Array<any>, row: Irow) => {\n    const isRowSelected = selectedRows.indexOf(value[0].toString()) !== -1;\n    const isLeafSelected = selectedLeafs.find(item => item === value.toString());\n    return <span data-id={value}\n                 data-row={value[0]}\n                 className={clsx(\n                     'cell',\n                     'cell' + row.type,\n                     isRowSelected && 'row__selected',\n                     isLeafSelected && 'cell__selected',\n                 )}/>\n}\n\nconst onCell = (selectedRows: String[],\n                selectedLeafs: String[],\n                setSelectedLeafs: SetStateAction<any>,\n                setSelectedRows: SetStateAction<any>,\n                setClickedData: SetStateAction<any>,\n) => (record: any) => ({\n    onClick(e: any) {\n        setClickedData({name: record.name, type: record.type, position: e.target.dataset.id})\n    },\n    onDoubleClick(e: any) {\n        const rowIndex = e.target.dataset.row;\n        const id = e.target.dataset.id || ''\n        const rowIsSelected = selectedRows.indexOf(rowIndex) === -1;\n        const leafIsSelected = selectedLeafs.indexOf(id) === -1;\n\n        if (record.type === 'Node' || !rowIsSelected && leafIsSelected) {\n            return;\n        }\n\n        if (rowIsSelected) {\n            setSelectedRows([...selectedRows, rowIndex])\n        }\n\n        const index = selectedLeafs.indexOf(id);\n        if (leafIsSelected) {\n            setSelectedLeafs([...selectedLeafs, e.target.dataset.id]);\n            return;\n        }\n        setSelectedLeafs((leafs: String[]) => {\n            const copy = [ ...leafs ];\n            copy.splice(index, 1);\n            return copy;\n        });\n        setSelectedRows((rows: any) => {\n            const copy = [ ...rows ].filter(row => row !== rowIndex);\n            return copy;\n        });\n    }\n});\n\nfunction App() {\n    const [selectedLeafs, setSelectedLeafs] = useState([]);\n    const [selectedRows, setSelectedRows] = useState([]);\n    const [clickedData, setClickedData] = useState({name: '', type: '', position: ''});\n\n    const columns = [\n        {\n            title: 'Tree Name',\n            dataIndex: 'name',\n            key: 'name',\n            width: 100,\n            render: (value: string) => {\n                return <span className='cell cell_first-column'>{value}</span>\n            },\n        },\n        {\n            title: 'Column Header',\n            dataIndex: '',\n            key: 'Column Header',\n            children: new Array(7).fill(0).map((_, index) => ({\n                title: `${index}`,\n                dataIndex: `column_${index}`,\n                key: `column_${index}`,\n                width: 50,\n                render: cellRenderer(selectedRows, selectedLeafs),\n                onCell: onCell(selectedRows, selectedLeafs, setSelectedLeafs, setSelectedRows, setClickedData)\n            }))\n        },\n    ];\n\n    return (\n        <div className='table-wrapper'>\n            <Table columns={columns} data={data}/>\n            <div className='info-wrapper'>\n                <div>\n                    Name: {clickedData.name}\n                </div>\n                <div>\n                    Type: {clickedData.type}\n                </div>\n                <div>\n                    Position(y,x): {clickedData.position}\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}